name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      replica_count:
        description: 'コンテナ実行数'
        required: true
        default: '1'

permissions:
  id-token: write
  contents: read

env:
  NODE_VERSION: '18.x'
  AZURE_CONTAINER_REGISTRY: acrtatsukonidemov1
  REPOSITORY_NAME: servicebus-receiver
  CONTAINER_APP_NAME: my-container-app-v1
  CONTAINER_APP_ENVIRONMENT: my-environment-v1
  RESOURCE_GROUP: tatsukoni-test-v2
  SERVIVE_BUS_NAMESPACE: sb-tatsukoni-demo-v1
  SERVICE_BUS_TOPIC_NAME: mytopic
  COSMOS_CONNECTION_STRING: ${{ secrets.COSMOS_CONNECTION_STRING }}

jobs:
  # ワークフローディスパッチ手動実行時の入力値検証
  validate-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Validate replica count
        run: |
          if [ "${{ github.event_name }}" == 'workflow_dispatch' ] && ! [[ "${{ github.event.inputs.replica_count }}" =~ ^[1-9][0-9]*$ ]]; then
            echo "replica_count は1以上の整数を指定してください。" >&2
            exit 1
          fi

  # container imageをレジストリにbuild & pushする
  build:
    runs-on: ubuntu-latest
    needs: validate-inputs
    outputs:
      CONTAINER_IMAGE_TAG: ${{ steps.tag.outputs.CONTAINER_IMAGE_TAG }}
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_CONTAINER_DEPLOY }}

      - name: Set container image tag
        id: tag
        run: |
          echo "CONTAINER_IMAGE_TAG=$(date +%Y%m%d%H%M%S)-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build and push image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.AZURE_CREDENTIALS_CLIENT_ID }}
          password: ${{ secrets.AZURE_CREDENTIALS_CLIENT_SECRET }}
      - run: |
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.REPOSITORY_NAME }}:${{ steps.tag.outputs.CONTAINER_IMAGE_TAG }} .
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.REPOSITORY_NAME }}:${{ steps.tag.outputs.CONTAINER_IMAGE_TAG }}

      - name: "Logout via Azure CLI"
        run: |
          az logout

  # Service Bus のキュー配信を停止(サブスクリプションルールを入れ替える)
  stop-queue:
    runs-on: ubuntu-latest
    needs: [validate-inputs, build]
    outputs:
      CURRENT_ACTIVE_SUBSCRIPTION: ${{ steps.current-active-subscription.outputs.CURRENT_ACTIVE_SUBSCRIPTION }}
      CURRENT_ACTIVE_SUBSCRIPTION_FILTER: ${{ steps.current-not-active-subscription.outputs.CURRENT_ACTIVE_SUBSCRIPTION_FILTER }}
      CURRENT_NOT_ACTIVE_SUBSCRIPTION: ${{ steps.current-not-active-subscription.outputs.CURRENT_NOT_ACTIVE_SUBSCRIPTION }}
      CURRENT_NOT_ACTIVE_SUBSCRIPTION_FILTER: ${{ steps.current-not-active-subscription.outputs.CURRENT_NOT_ACTIVE_SUBSCRIPTION_FILTER }}
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_CONTAINER_DEPLOY }}

      - name: Get Current Active Subscription
        id: current-active-subscription
        run: |
          currentActiveSubscription=$(az containerapp list \
            --environment ${{ env.CONTAINER_APP_ENVIRONMENT }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --query "[].properties.template.containers[].env[]" -o json | jq -r '.[] | select(.name=="SUBSCRIPTION_NAME").value')
          echo "CURRENT_ACTIVE_SUBSCRIPTION=$currentActiveSubscription" >> $GITHUB_OUTPUT

      - name: Get Current Not Active Subscription
        id: current-not-active-subscription
        run: |
          if [ "${{ steps.current-active-subscription.outputs.CURRENT_ACTIVE_SUBSCRIPTION }}" = "blue" ]; then
            echo "CURRENT_NOT_ACTIVE_SUBSCRIPTION=green" >> $GITHUB_OUTPUT
            echo "CURRENT_ACTIVE_SUBSCRIPTION_FILTER=BlueFilter" >> $GITHUB_OUTPUT
            echo "CURRENT_NOT_ACTIVE_SUBSCRIPTION_FILTER=GreenFilter" >> $GITHUB_OUTPUT
          elif [ "${{ steps.current-active-subscription.outputs.CURRENT_ACTIVE_SUBSCRIPTION }}" = "green" ]; then
            echo "CURRENT_NOT_ACTIVE_SUBSCRIPTION=blue" >> $GITHUB_OUTPUT
            echo "CURRENT_ACTIVE_SUBSCRIPTION_FILTER=GreenFilter" >> $GITHUB_OUTPUT
            echo "CURRENT_NOT_ACTIVE_SUBSCRIPTION_FILTER=BlueFilter" >> $GITHUB_OUTPUT
          fi

      # キューはAt Least Onceで配信しているので、先に両方のサブスクリプションを有効化してから、現在配信中のサブスクリプションを停止する
      - name: Update subscription rule
        run: |
          echo "Current Active Subscription: ${{ steps.current-active-subscription.outputs.CURRENT_ACTIVE_SUBSCRIPTION }}"
          echo "Current Not Active Subscription: ${{ steps.current-not-active-subscription.outputs.CURRENT_NOT_ACTIVE_SUBSCRIPTION }}"
          az servicebus topic subscription rule update \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --namespace-name ${{ env.SERVIVE_BUS_NAMESPACE }} \
            --topic-name ${{ env.SERVICE_BUS_TOPIC_NAME }} \
            --subscription-name ${{ steps.current-not-active-subscription.outputs.CURRENT_NOT_ACTIVE_SUBSCRIPTION }} \
            --name ${{ steps.current-not-active-subscription.outputs.CURRENT_NOT_ACTIVE_SUBSCRIPTION_FILTER }} \
            --filter-sql-expression 1=1
          az servicebus topic subscription rule update \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --namespace-name ${{ env.SERVIVE_BUS_NAMESPACE }} \
            --topic-name ${{ env.SERVICE_BUS_TOPIC_NAME }} \
            --subscription-name ${{ steps.current-active-subscription.outputs.CURRENT_ACTIVE_SUBSCRIPTION }} \
            --name ${{ steps.current-not-active-subscription.outputs.CURRENT_ACTIVE_SUBSCRIPTION_FILTER }} \
            --filter-sql-expression 1=0

      - name: "Logout via Azure CLI"
        run: |
          az logout

  # container appをデプロイする
  deploy:
    runs-on: ubuntu-latest
    needs: [validate-inputs, build, stop-queue]
    outputs:
      CURRENT_CONTAINER_REVISION: ${{ steps.current-container-revision.outputs.CURRENT_CONTAINER_REVISION }}
      DEPLOY_CONTAINER_REVISION: ${{ steps.deploy-container-revision.outputs.DEPLOY_CONTAINER_REVISION }}
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_CONTAINER_DEPLOY }}

      # デプロイ実施前に、現在稼働しているコンテナのリビジョンを取得しておく
      - name: Get Current Container Revision
        id: current-container-revision
        run: |
          currentContainerRevision=$(az containerapp list \
            --environment ${{ env.CONTAINER_APP_ENVIRONMENT }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --query "[].properties.latestRevisionName" \
            -o tsv)
          echo "CURRENT_CONTAINER_REVISION=$currentContainerRevision" >> $GITHUB_OUTPUT

      - name: Set Deploy Container Revision
        id: deploy-container-revision
        run: |
          echo "DEPLOY_CONTAINER_REVISION=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Deploy container app
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            REPLICA_COUNT="${{ github.event.inputs.replica_count }}"
          else
            REPLICA_COUNT="1"
          fi
          echo "Deploy container app with replica count: $REPLICA_COUNT"
          az containerapp create \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --environment ${{ env.CONTAINER_APP_ENVIRONMENT }} \
            --min-replicas $REPLICA_COUNT \
            --max-replicas $REPLICA_COUNT \
            --revision-suffix ${{ steps.deploy-container-revision.outputs.DEPLOY_CONTAINER_REVISION }} \
            --secrets \
              "service-bus-connection-string=keyvaultref:https://kv-tatsukoni-demo-v1.vault.azure.net/secrets/SERVICE-BUS-CONNECTION-STRING/a97b5c3b058840e6b17dadff37794f19,identityref:86824aae-b862-4961-bc6b-2b51af556d03" \
              "cosmos-connection-string=keyvaultref:https://kv-tatsukoni-demo-v1.vault.azure.net/secrets/COSMOS-CONNECTION-STRING/bb3ecc5462744c2dae8f783da7a2e5fd,identityref:86824aae-b862-4961-bc6b-2b51af556d03" \
            --env-vars \
              "SUBSCRIPTION_NAME=${{ needs.stop-queue.outputs.CURRENT_NOT_ACTIVE_SUBSCRIPTION }}" \
              "REVISION_SUFFIX=${{ steps.deploy-container-revision.outputs.DEPLOY_CONTAINER_REVISION }}" \
              "CONNECTION_STRING=secretref:service-bus-connection-string" \
              "COSMOS_CONNECTION_STRING=secretref:cosmos-connection-string" \
            --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.REPOSITORY_NAME }}:${{ needs.build.outputs.CONTAINER_IMAGE_TAG }} \
            --registry-username ${{ env.AZURE_CONTAINER_REGISTRY }} \
            --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
            --registry-server ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io \
            --revisions-mode multiple

      - name: "Logout via Azure CLI"
        run: |
          az logout

  # 稼働中のワーカー処理が0になったら、旧コンテナリビジョンを非アクティブ化する
  deactivate-old-revision:
    runs-on: ubuntu-latest
    needs: [validate-inputs, build, stop-queue, deploy]
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_CONTAINER_DEPLOY }}

      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Node Modules
        run: |
          npm install

      - name: Check and wait
        id: check_loop
        run: |
          for i in {1..10}; do
            count=$(node count.js ${{ needs.deploy.outputs.CURRENT_CONTAINER_REVISION }})
            echo "Attempt $i: Process count is $count"
            if [ "$count" == "0" ]; then
              echo "WORKER_COUNT=0" >> $GITHUB_ENV
              break
            elif [ "$i" -eq 10 ]; then
              echo "WORKER_COUNT=$count" >> $GITHUB_ENV
              echo "Process count is not 0. Exit." >&2
              exit 1
            else
              sleep 45
            fi
          done

      - name: Deactivate old container revision
        if: env.WORKER_COUNT.count == '0'
        run: |
          az containerapp revision deactivate \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --revision ${{ needs.deploy.outputs.CURRENT_CONTAINER_REVISION }} \

      - name: "Logout via Azure CLI"
        run: |
          az logout
